#include <Adafruit_ILI9341.h>
#include <SPI.h>
#include <Keypad.h>
#include <Adafruit_GFX.h>

const int CSv = 45;
const int RSTv = 47;
const int DCv = 49;
const int MOSIv = 51;
const int SCKv = 52;
const int MISOv = 50;

#define TFT_CS CSv
#define TFT_DC DCv
#define TFT_RST RSTv

Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_RST);

// Definimos el n√∫mero de filas y columnas del keypad
const byte ROWS = 4;
const byte COLS = 4;

// Definimos las teclas en una matriz
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

// Pines del Arduino conectados al teclado
byte rowPins[ROWS] = {2, 3, 4, 5};  
byte colPins[COLS] = {6, 7, 8 ,9};  

int selectedGame = 0;

byte passwordGame[3]; 
byte passwordPlayer[3];
bool rondaPasada;
int indexGame = 0; 
int indexPlayer = 0;
String userName = "";


Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

//Bitmaps - Organizados en Spritesheets para animaciones

const uint16_t horseTest[32 * 32] PROGMEM = {
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0x92e4, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c,
  0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c, 0xef3c
};

const uint16_t roblox[] PROGMEM = { 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF6C, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF6C, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xEA8A, 0xEA8A, 0x0000, 0xE686, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xE686, 0x0000, 0xEA8A, 0xEA8A, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xE686, 0xE686, 0xE686, 0xE686, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xE686, 0xE686, 0xE686, 0xE686, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0x0000, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0x0000, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFF47, 0xFF47, 0xFF47, 0xE686, 0xE686, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xFF47, 0xE686, 0xE686, 0xE686, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFE00, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xE686, 0xFE00, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x21B2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x21B2, 0x21B2, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x21B2, 0x21B2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0x21B2, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x63B8, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x21B2, 0xFE00, 0xFE00, 0x0000, 0x0000, 0x0000, 0xFE00, 0xFE00, 0xFF6C, 0x21B2, 0x63B8, 0x63B8, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A54, 0x21B2, 0xFF47, 0xFE00, 0xFE00, 0x0000, 0xFE00, 0xFE00, 0xFF6C, 0xFF6C, 0x21B2, 0x63B8, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A54, 0x3A54, 0x21B2, 0xE686, 0xFF47, 0xFE00, 0xFE00, 0xFE00, 0xFF6C, 0xFF6C, 0xFF47, 0x21B2, 0x63B8, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x21B2, 0xE686, 0xFF47, 0xFF47, 0xFE00, 0xFE00, 0xFF47, 0xFF47, 0xFF47, 0x21B2, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x21B2, 0xE686, 0xE686, 0xFF47, 0xFE00, 0xFE00, 0xFF47, 0xE686, 0xE686, 0x21B2, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A96, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x3A54, 0x21B2, 0xE686, 0xE686, 0xE686, 0xFE00 };

const uint16_t caminar1[32 * 32] PROGMEM = { 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x18E3, 0x18E3, 0x18E3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0xF803, 0x3C49, 0xF803, 0x3C49, 0x18E3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x3C49, 0xF803, 0xF803, 0x3C49, 0xF803, 0x3C49, 0x18E3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x3C49, 0xF803, 0x3C49, 0xF803, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x8329, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x0000, 0x8329, 0xBC4C, 0xBC4C, 0xBC4C, 0xBC4C, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0xFFFF, 0x0000, 0xFE11, 0xFE11, 0xFE11, 0xFE11, 0xFE11, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x18E3, 0x0000, 0x4999, 0x5AED, 0x4999, 0x5AED, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5AED, 0x4999, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE11, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE11, 0x4208, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x4208, 0x0000, 0x0000, 0x4208, 0xFE11, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFE11, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x4208, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x100F, 0x100F, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x1082, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1082, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000 };


//Animaciones

void drawColorBox(int x, int y, int width , int height, uint16_t color) {
  tft.fillRect(x, y, width, height, color);
}

void drawMarkerBar(int x, int y, int width, int height) {
  int blockHeight = 10;
  bool white = true;
  for (int i = 0; i < height; i += blockHeight) {
    if (white) {
      tft.fillRect(x, y + i, width, blockHeight, ILI9341_WHITE);
    } else {
      tft.fillRect(x, y + i, width, blockHeight, ILI9341_BLACK);
    }
    white = !white;
  }
}

void setup() {
  Serial.begin(9600);
  tft.begin();             // Inicializar pantalla
  tft.setRotation(3);      // Ajusta la rotaci√≥n (0-3)
  tft.fillScreen(ILI9341_BLACK);  // Limpiar pantalla con negro

  // Base de dise√±o

  tft.fillScreen(ILI9341_DARKGREY);
  
  // Dibujo de caballos
  drawColorBox(10, 20, 30, 20, ILI9341_RED);
  drawColorBox(10, 60, 30, 20, ILI9341_ORANGE);
  drawColorBox(10, 100, 30, 20, ILI9341_YELLOW);
  drawColorBox(10, 140, 30, 20, ILI9341_GREEN);
  
  // Dibujo de la meta
  drawMarkerBar(tft.width() - 30, 15, 20, 160);

  // Barra de ataque
  tft.fillRect(10 , tft.height() - 40, tft.width() - 20, 30, ILI9341_BLACK);
    // Cuadro verde - posici√≥n izquierda
  tft.fillRect(tft.width()/3 , tft.height() - 40, tft.width()/3, 30, ILI9341_GREEN);
  
  // Cuadro amarillo - posici√≥n centro
  tft.fillRect(tft.width()/2 -10 , tft.height() - 40, 20, 30, ILI9341_YELLOW);



  
  // Cuadro verde - posici√≥n derecha
  // tft.fillRect(110, baseY, blockWidth, blockHeight, ILI9341_GREEN);


  randomSeed(analogRead(A0)); // Semilla aleatoria unica
  Serial.println("Bienvenido a nuestro proyecto! Ingrese su nombre de usuario:");
  
  while (userName.length() == 0) {
    if (Serial.available() > 0) {
      userName = Serial.readStringUntil('\n'); // Lee hasta que el usuario presione Enter
      userName.trim(); // Quita espacios al inicio o final
    }
  }
  Serial.print("Nombre Ingresado:");
  Serial.println(userName);

  
}


void loop() {
  if (selectedGame == 0){
  	// Cambiar los prints por cosas mostradas en la pantalla
  	Serial.println("Ingrese el juego a seleccionar: A-Simon B-Caballos");
    while (selectedGame == 0){
      char key = keypad.getKey();
      if (key){
        if (key == 'A'){
          Serial.println("Juego seleccionado: Simon");
          selectedGame = 1;
        } else if (key == 'B'){
          Serial.println("Juego seleccionado: Caballos");
          selectedGame = 2;
        } else {
        	Serial.println("Tecla no valida");
        }
        

      }
    }
  }
  if (selectedGame == 1){

    if (indexGame < 20) {
      passwordGame[indexGame] = random(1, 10); // Guarda n√∫mero aleatorio (1-9)
      Serial.print("Numero agregado: ");
      Serial.println(passwordGame[indexGame]);
      indexGame++;
    }

    // MOSTRAR CLAVE GENERADA
    Serial.print("Clave: ");
    for (int i = 0; i < indexGame; i++) {
      Serial.print(passwordGame[i]);
      Serial.print(" ");
    }
    Serial.println("\n----------");

    // JUGADOR INTENTA REPLICAR CLAVE
    indexPlayer = 0;
    while (indexPlayer < indexGame) {
      char key = keypad.getKey(); 
      if (key) {
        if (key >= '0' && key <= '9') {

          passwordPlayer[indexPlayer] = key - '0'; // convierte char '3' ‚Üí int 3
          Serial.print("Tecla elegida: ");
          Serial.println(passwordPlayer[indexPlayer]);
          indexPlayer++;
        } else {
          Serial.println("Tecla no v√°lida");
          rondaPasada = false;
          break;
        }
      }
    }

    // Comparaci√≥n
    bool rondaPasada = true;
    for (int i = 0; i < indexGame; i++) {
      if (passwordGame[i] != passwordPlayer[i]) {
        rondaPasada = false;
        break;
      }
    }

    if (rondaPasada) {
      Serial.println("GG, pasaste la ronda!");
    } else {
      Serial.println("Fallaste! Buena suerte la prox.");
      while (1); // detener el juego
    }

    delay(1000);
  }
}